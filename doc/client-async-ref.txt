<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f4f4f4;
        }
        button {
            padding: 5px 10px;
            margin: 0 5px;
        }
        form {
            margin-bottom: 20px;
        }
        input {
            margin: 0 10px;
            padding: 5px;
        }
    </style>
</head>
<body>
    <h1>User Management</h1>

    <form id="userForm">
        <input type="text" id="name" placeholder="Name" required>
        <input type="email" id="email" placeholder="Email" required>
        <button type="submit">Add User</button>
    </form>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="userTable">
            <!-- Rows will be dynamically inserted here -->
        </tbody>
    </table>

    <script>
        const apiUrl = 'http://localhost:3000/users';

        // Aszinkron függvény a felhasználók betöltésére
        async function loadUsers() {
            try {
                const response = await fetch(apiUrl);
                const users = await response.json();
                
                const table = document.getElementById('userTable');
                table.innerHTML = '';
                users.forEach(user => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${user.id}</td>
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>
                            <button onclick="editUser(${user.id}, '${user.name}', '${user.email}')">Edit</button>
                            <button onclick="deleteUser(${user.id})">Delete</button>
                        </td>
                    `;
                    table.appendChild(row);
                });
            } catch (error) {
                console.error('Error loading users:', error);
            }
        }

        // Aszinkron függvény az új felhasználó hozzáadására
        document.getElementById('userForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, email })
                });
                
                if (response.ok) {
                    loadUsers();
                    e.target.reset();
                } else {
                    console.error('Error adding user:', await response.json());
                }
            } catch (error) {
                console.error('Error adding user:', error);
            }
        });

        // Aszinkron függvény a felhasználó módosítására
        async function editUser(id, name, email) {
            const newName = prompt('Enter new name:', name);
            const newEmail = prompt('Enter new email:', email);
            if (newName && newEmail) {
                try {
                    const response = await fetch(`${apiUrl}/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ name: newName, email: newEmail })
                    });
                    
                    if (response.ok) {
                        loadUsers();
                    } else {
                        console.error('Error updating user:', await response.json());
                    }
                } catch (error) {
                    console.error('Error updating user:', error);
                }
            }
        }

        // Aszinkron függvény a felhasználó törlésére
        async function deleteUser(id) {
            if (confirm('Are you sure you want to delete this user?')) {
                try {
                    const response = await fetch(`${apiUrl}/${id}`, {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        loadUsers();
                    } else {
                        console.error('Error deleting user:', await response.json());
                    }
                } catch (error) {
                    console.error('Error deleting user:', error);
                }
            }
        }

        // Felhasználók betöltése az oldal betöltésekor
        document.addEventListener('DOMContentLoaded', loadUsers);
    </script>
</body>
</html>
